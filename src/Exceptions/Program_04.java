package Exceptions;

// Оператор throws
/**
 * В теме Введение в обработку исключений были рассмотрены некоторые основные
 * моменты обработки исключений. Сейчас более подробно поговорим о других
 * моментах, связанных с обработкой исключений.
 * 
 * Иногда метод, в котором может генерироваться исключение, сам не обрабатывает
 * это исключение. В этом случае в объявлении метода используется оператор
 * throws, который надо обработать при вызове этого метода. Например, у нас
 * имеется метод вычисления факториала, и нам надо обработать ситуацию, если в
 * метод передается число меньше 1.
 * 
 * С помощью оператора throw по условию выбрасывается исключение. В то же время
 * метод сам это исключение не обрабатывает с помощью try..catch, поэтому в
 * определении метода используется выражение throws Exception.
 * 
 * Теперь при вызове этого метода нам обязательно надо обработать выбрасываемое
 * исключение:
 */
public class Program_04 {
    public static void main(String[] args) {
        try {
            int result = getFactorial(-6);
            System.out.println(result);
        } catch (Exception ex) {
            // TODO: handle exception
            System.out.println(ex.getMessage());

        }

    }

    public static int getFactorial(int num) throws Exception { // при вызове метода надо! обработать исключение

        if (num < 1)
            throw new Exception("Это число меньше 1");
        int result = 1;
        for (int i = 1; i <= num; i++) {

            result *= i;
        }
        return result;
    }
}
